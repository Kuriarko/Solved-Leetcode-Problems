//Binary tree inorder traversal without recursion implemented using stack

//code

class Solution {
    public List<Integer> inorderTraversal(TreeNode root) {
        
        List<Integer> list = new ArrayList<>();
        
        Stack<TreeNode> stk = new Stack<>();
        
        TreeNode curr = root;
        
        while(curr != null || stk.empty() == false)
        {
             while(curr != null)
        {
            stk.push(curr);
            
            curr = curr.left;
            
        }
        
        while(curr == null && stk.empty() == false)
        {
             
        TreeNode temp = stk.peek();
        
        list.add(temp.val);
        
        stk.pop();
        
        curr = temp.right;
            
        }
            
        }
        
        
        return list;
        
       
       
    }
}