//Input: nums = [1,3,-1,-3,5,3,6,7], k = 3
//Output: [3,3,5,5,6,7]

//code
class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        Deque<Integer> deque = new LinkedList<>();
        
        int[] res = new int[nums.length - k + 1];
        
        int rescount = 0;
        
        for(int i=0; i < nums.length; i++)
        {
            if(deque.size() > 0 && i - deque.getFirst() >= k)
                deque.removeFirst();
           
            while(deque.size() > 0 && nums[deque.getLast()] <= nums[i])
                deque.removeLast();
            
            deque.addLast(i);
            
            if(i >= k-1)
                res[rescount++]=nums[deque.getFirst()];
        }
        
        return res;
        
    }
}