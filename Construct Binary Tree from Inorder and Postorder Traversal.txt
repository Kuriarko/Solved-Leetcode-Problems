class Solution {
    Map<Integer,Integer> map = new HashMap<>();
    
    public TreeNode buildTree(int[] inorder, int[] postorder) {
        
        for(int i=0 ; i<inorder.length; i++)
        {
            map.put(inorder[i],i);
        }
    
        return returnTree(postorder.length-1, inorder.length-1, 0, inorder, postorder);
    }
    
    public TreeNode returnTree(int PstStart,int inStart,int inEnd,int[] inorder,int[] postorder)
    {
        if( PstStart < 0 || inStart < inEnd)return null;
        
       TreeNode root = new TreeNode(postorder[PstStart]);
        
        
        
        int index = map.get(root.val);
        
         root.right = returnTree(PstStart - 1,inStart,index+1,inorder,postorder);
        
        root.left = returnTree(PstStart -(inStart - index)-1 ,index-1,inEnd,inorder,postorder);
       
        
      return root;  
    }
}