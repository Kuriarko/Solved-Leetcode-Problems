//code(Iterative solution)

class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> list = new ArrayList<>();
        if(root == null)return list;
        
        Queue<TreeNode> queue = new LinkedList<>();
        
        queue.add(root);
        
        while(queue.isEmpty() == false)
        {
            int size = queue.size();
            
            while(size > 1)
            {
                if(queue.peek().left != null)
                    queue.add(queue.peek().left);
                
                if(queue.peek().right != null)
                    queue.add(queue.peek().right);
                
                queue.poll();
                
                size--;
            }
            
           TreeNode temp = queue.poll();
            
            list.add(temp.val);
            
            if(temp.left != null)
                queue.add(temp.left);
            
             if(temp.right != null)
                queue.add(temp.right);
            
            
        }
        
        return list;
    }
}

