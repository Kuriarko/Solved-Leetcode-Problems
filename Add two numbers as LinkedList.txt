/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */

class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
        int sum=0;
        int carry=0;
        ListNode head= new ListNode(0);
        ListNode current=head;
        
        
        while(l1 != null && l2 != null)
        {
            sum = (l1.val + l2.val + carry);
            if(sum >= 10)
            {
                carry = 1;
                sum = sum % 10;
                 ListNode temp = new ListNode(sum);
                current.next=temp;
                 current=temp;
             
                sum=0;
              
            }
            else
            {
                carry = 0;
                sum = sum % 10;
               ListNode temp = new ListNode(sum);
                current.next=temp;
                current=temp;
                
                sum=0;
            }
            
            l1=l1.next;
            l2=l2.next;
            
        }
        if(l1==null)
        {
            while(l2 != null)
            {
                 sum = l2.val + carry;
                 if(sum >= 10)
            {
                carry = 1;
                sum = sum % 10;
                 ListNode temp = new ListNode(sum);
                current.next=temp;
                 current=temp;
             
                sum=0;
              
            }
                   else
            {
                carry = 0;
                sum = sum % 10;
               ListNode temp = new ListNode(sum);
                current.next=temp;
                current=temp;
                
                sum=0;
            }
                l2=l2.next;
                
            }
            
        }
        
        if(l2==null)
        {
            while(l1 != null)
            {
                sum = l1.val + carry;
                 if(sum >= 10)
            {
                carry = 1;
                sum = sum % 10;
                 ListNode temp = new ListNode(sum);
                current.next=temp;
                 current=temp;
             
                sum=0;
              
            }
                   else
            {
                carry = 0;
                sum = sum % 10;
               ListNode temp = new ListNode(sum);
                current.next=temp;
                current=temp;
                
                sum=0;
            }
                l1=l1.next;
                
                
            }
        }
        
        if(carry != 0)
        {
             ListNode temp = new ListNode(carry);
            current.next=temp;
                current=temp;
        }
        
        return head.next;
        
    }
}