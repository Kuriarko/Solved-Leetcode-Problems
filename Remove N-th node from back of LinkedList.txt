/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */

class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        
        ListNode ptr1=head;
        ListNode ptr2=head;
        ListNode ptr3=head;
        
        if(ptr2.next == null)
            return null;
        
        int count=0;
        int indicate=0;
        
        while(count < n)
        {
            ptr2=ptr2.next;
            count++;
        }
        
        while(ptr2 != null)
        {
            ptr1=ptr1.next;
            ptr2= ptr2.next;
            
            indicate++;
            
        }
        
        if(indicate != 0)
        {
            
             while(ptr3.next != ptr1)
        {
            ptr3=ptr3.next;
        }
        
        ptr3.next = ptr1.next;
        
        
      return head; 
            
        }
        
        else
        {
            head= head.next;
            return head;
        }
        
        
        
    }
}