class Solution {
    public List<List<Integer>> permute(int[] nums) {
        
        List<List<Integer>> ans = new ArrayList<>();
        List<Integer> ds = new ArrayList<>();
        boolean[] visited = new boolean[nums.length];
        
        func(nums,visited,ans,ds);
        
        
        return ans;
        
    }
    
   private void func(int[] nums, boolean[] visited, List<List<Integer>> ans, List<Integer> ds)
    {
        if(ds.size()==nums.length)
        {
           ans.add(new ArrayList<>(ds));
           return;
        }
        for(int i=0;i<nums.length;i++)
        {
            if(visited[i]==false)
            {
                ds.add(nums[i]);
                visited[i]=true;
                func(nums,visited,ans,ds);
                ds.remove(ds.size()-1);
                visited[i]=false;
            }
            
        }
       
       return;
    }
}